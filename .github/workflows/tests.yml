name: Tests

on:
  # Run on relevant pushes to select branches and on all relevant pull requests.
  push:
    branches:
      - main
      - trunk
      - 'release/**'
      - 'hotfix/[0-9]+.[0-9]+*'
      - 'feature/**'
    paths-ignore:
      - '**.css'
      - '**.js'
      - '**.md'
      - '**.png'
      - '**.txt'
      - '.babelrc'
      - '.editorconfig'
      - '.gitattributes'
      - '.gitignore'
      - 'CHANGELOG'
      - 'LICENSE'
      - 'package.json'
      - '.phpcs.xml.dist'
      - 'phpcs.xml.dist'
      - 'yarn.lock'
      - '.github/dependabot.yml'
      - '.github/workflows/cs.yml'
      - '.github/workflows/deploy.yml'
      - '.github/workflows/lint.yml'
      - 'config/**'
      - '!config/scripts/install-wp-tests.sh'
      - 'css/**'
      - 'js/**'

  pull_request:
    paths-ignore:
      - '**.css'
      - '**.js'
      - '**.md'
      - '**.png'
      - '**.txt'
      - '.babelrc'
      - '.editorconfig'
      - '.gitattributes'
      - '.gitignore'
      - 'CHANGELOG'
      - 'LICENSE'
      - 'package.json'
      - '.phpcs.xml.dist'
      - 'phpcs.xml.dist'
      - 'yarn.lock'
      - '.github/dependabot.yml'
      - '.github/workflows/cs.yml'
      - '.github/workflows/deploy.yml'
      - '.github/workflows/lint.yml'
      - 'config/**'
      - '!config/scripts/install-wp-tests.sh'
      - 'css/**'
      - 'js/**'
  # Allow manually triggering the workflow.
  workflow_dispatch:

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php_version: ['8.2', '8.3']
        coverage: [false]

        # Run code coverage only on high/low PHP.
        # include:
        # - php_version: 8.2
        #   coverage: true
        # - php_version: 8.3
        #   coverage: true

    name: "Unit Test: PHP ${{ matrix.php_version }}"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php_version }}
          ini-values: zend.assertions=1, error_reporting=-1, display_errors=On
          coverage: ${{ matrix.coverage == true && 'xdebug' || 'none' }}

      # Install dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-php-dependencies-with-composer
      - name: Install Composer dependencies
        uses: ramsey/composer-install@v3
        with:
          # Bust the cache at least once a month - output format: YYYY-MM.
          custom-cache-suffix: $(date -u "+%Y-%m")

      - name: Start wp-env
        uses: godaddy-wordpress/setup-wp-env@v1
        with:
          core: 'WordPress/WordPress'
          phpVersion: ${{ matrix.php_version }}
          plugins: '["."]'

      - name: Run unit tests
        if: ${{ matrix.coverage == false }}
        run: composer test

      # - name: Run the unit tests with code coverage
      #   if: ${{ matrix.coverage == true }}
      #   run: composer coverage

      # - name: Upload coverage results to Coveralls
      #   if: ${{ success() && matrix.coverage == true }}
      #   uses: coverallsapp/github-action@v2
      #   with:
      #     format: clover
      #     file: build/logs/clover.xml
      #     flag-name: php-${{ matrix.php_version }}
      #     parallel: true

  # coveralls-finish:
  #   needs: [tests]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Coveralls Finished
  #       uses: coverallsapp/github-action@v2
  #       with:
  #         parallel-finished: true
